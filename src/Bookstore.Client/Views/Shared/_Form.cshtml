@model Bookstore.Client.Models.BookViewModel

@{
    string action = @ViewData["title"].ToString() == "Create book" ? "Create" : "Update";
}

@using (Html.BeginForm(@action, "home", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
<table class="table-create">
    @if (action == "Update")
    {
        Html.TextBoxFor(x => x.Id, null, new { @type = "hidden" });
    }

    <tr>
        <th>Title</th>
        <td>
            @Html.TextBoxFor(x => x.Title, null, new { @class = "form-control",placeholder="Type the title of the book" })
            @Html.ValidationMessageFor(x => x.Title)
        </td>
    </tr>
    <tr>
        <th>Author</th>
        <td>
            @Html.TextBoxFor(x => x.Author, null, new { @class = "form-control", placeholder = "Type author of the book" })
            @Html.ValidationMessageFor(x => x.Author)
        </td>
    </tr>
    <tr>
        <th>Description</th>
        <td>
            @Html.TextBoxFor(x => x.Description, null, new { @class = "form-control", placeholder = "Type the desccription of the book" })
            @Html.ValidationMessageFor(x => x.Description)
        </td>
    </tr>
    <tr>
        <th>Publish date</th>
        <td>
            @Html.EditorFor(x => x.PublishDate, null, new { @class = "form-control"})
            @Html.ValidationMessageFor(x => x.PublishDate)
        </td>
    </tr>
    @if (action == "Create")
    {
        @await Html.PartialAsync("_File_Slector")
    }
    <tr>
        <th><button>@(@action == "Create" ? "Create book" : "Update book")</button></th>
    </tr>
</table>
<a href="@Url.Action("index")" class="action">Back to index</a>
}